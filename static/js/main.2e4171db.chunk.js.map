{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sNAKA,SAASA,EAAOC,GACZ,OACI,wBACAC,UAAU,SACVC,QAAUF,EAAME,QAFhB,SAIMF,EAAMG,Q,IAMZC,E,2KASSC,GAAI,IAAD,OACd,OACE,cAACN,EAAD,CACAI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMpC,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAlCTC,IAAMC,WA0CpBC,E,kDACJ,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,SAAS,EACTC,WAAY,GAPG,E,wDAWPZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMK,WAAa,GAE9DV,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBf,QAASA,KAEXU,WAAYJ,EAAQM,OACpBH,SAAUV,KAAKM,MAAMI,a,6BAIlBO,GACLjB,KAAKe,SAAS,CACZJ,WAAYM,EACZP,QAAUO,EAAO,IAAO,M,+BAIlB,IAgBJC,EAhBG,OACDX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMK,YAC7BS,EAASN,EAAgBK,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAI,sBACFA,GACf,mBACA,OACE,6BACE,wBAAQ3B,QAAS,kBAAM,EAAK6B,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OALEL,EADEE,EACI,kBAAcA,GAEd,uBAAoBpB,KAAKM,MAAMI,QAAU,IAAM,KAIrD,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASkB,EAAQlB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK2B,YAAY3B,QAGrC,sBAAKJ,UAAU,YAAf,UACE,8BAAOuB,IACP,6BAAMG,c,GArEGlB,IAAMC,WA4EzB,SAASU,EAAgBb,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMd,OAAQd,IAAK,CAAC,IAAD,cACnB4B,EAAM5B,GADa,GAC9B6B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAKTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.2e4171db.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Square(props) {\n    return (\n        <button\n        className=\"square\"\n        onClick={ props.onClick }\n        >\n            { props.value }\n        </button>\n    );\n}\n  \n\n  class Board extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         squares: Array(9).fill(null),\n    //         xIsNext: true,\n    //     };\n    // }\n\n    renderSquare(i) {\n      return (\n        <Square \n        value={this.props.squares[i]} \n        onClick={() => this.props.onClick(i)}\n      />\n      );\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n\n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null)\n        }],\n        xIsNext: true,\n        stepNumber: 0,\n      };\n    }\n\n    handleClick(i) {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n       });\n    }\n\n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0\n      });\n    }\n\n    render() {\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n\n      const moves = history.map((step, move) => {\n        const desc = move ?\n        `go to move #${move}` :\n        'Go to game start';\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n      });\n\n      let status;\n      if (winner) {\n        status = `Winner: ${winner}`;\n      } else {\n        status = `Next player: ${ this.state.xIsNext ? 'X' : 'O' }`;  \n      }\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board \n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{ status }</div>\n            <ol>{ moves }</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "],"sourceRoot":""}